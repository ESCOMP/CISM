Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: glide_ground._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (glide_ground._) [1] /glade/u/home/tvda/CISM/libglide/glide_ground.F90(34,8)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglide/glide_ground.F90(34,8):remark #34051: REGISTER ALLOCATION : [glide_ground._] /glade/u/home/tvda/CISM/libglide/glide_ground.F90:34

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIDE_GROUND::GLIDE_CALVE_ICE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIDE_GROUND::GLIDE_CALVE_ICE) [2] /glade/u/home/tvda/CISM/libglide/glide_ground.F90(44,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(76,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(76,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(76,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(76,5)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(76,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(76,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(139,11)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(139,11)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(139,11)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(139,11)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(140,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(140,14)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(140,14)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(141,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(141,14)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(141,14)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(144,11)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(144,11)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(144,11)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(144,11)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(145,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(145,14)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(145,14)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(146,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(146,14)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(146,14)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(116,8)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(116,8)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(116,8)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(117,11)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(117,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(117,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(118,11)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(118,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(118,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(109,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(109,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(109,8)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(109,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(110,11)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(110,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(110,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(111,11)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(111,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(111,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(94,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(94,10)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(94,10)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(85,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(85,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(85,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(86,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(86,10)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(86,10)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(87,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(87,10)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglide/glide_ground.F90(87,10)
   <Remainder>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglide/glide_ground.F90(44,14):remark #34051: REGISTER ALLOCATION : [glide_ground_mp_glide_calve_ice_] /glade/u/home/tvda/CISM/libglide/glide_ground.F90:44

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     909
            Global    :     480
            Local     :     429
        Regenerable   :      31
        Spilled       :     180
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :    1312 bytes*
            Reads     :     279 [5.87e+00 ~ 5.9%]
            Writes    :     191 [2.46e+00 ~ 2.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
