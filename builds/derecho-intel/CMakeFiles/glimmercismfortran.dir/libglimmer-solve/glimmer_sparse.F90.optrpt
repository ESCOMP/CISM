Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: glimmer_sparse._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (glimmer_sparse._) [1] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(31,8)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(31,8):remark #34051: REGISTER ALLOCATION : [glimmer_sparse._] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90:31

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_SPARSE::SPARSE_ALLOCATE_WORKSPACE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_SPARSE::SPARSE_ALLOCATE_WORKSPACE) [2] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(107,16)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(133,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (1, 0)
/glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(107,16):remark #34051: REGISTER ALLOCATION : [glimmer_sparse_mp_sparse_allocate_workspace_] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90:107

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r14-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :      34
            Global    :      14
            Local     :      20
        Regenerable   :       4
        Spilled       :       3
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       2 [2.43e-01 ~ 0.2%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_SPARSE::SPARSE_SOLVER_PREPROCESS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_SPARSE::SPARSE_SOLVER_PREPROCESS) [3] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(139,16)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(139,16):remark #34051: REGISTER ALLOCATION : [glimmer_sparse_mp_sparse_solver_preprocess_] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90:139

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      18
            Global    :      10
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_SPARSE::SPARSE_SOLVE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_SPARSE::SPARSE_SOLVE) [4] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(165,14)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(165,14):remark #34051: REGISTER ALLOCATION : [glimmer_sparse_mp_sparse_solve_] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90:165

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8-r11]
        
    Routine temporaries
        Total         :      33
            Global    :      17
            Local     :      16
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       2 [2.10e+00 ~ 2.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_SPARSE::SPARSE_SOLVER_POSTPROCESS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_SPARSE::SPARSE_SOLVER_POSTPROCESS) [5] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(227,16)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(227,16):remark #34051: REGISTER ALLOCATION : [glimmer_sparse_mp_sparse_solver_postprocess_] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90:227

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      18
            Global    :      10
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_SPARSE::SPARSE_DESTROY_WORKSPACE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_SPARSE::SPARSE_DESTROY_WORKSPACE) [6] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(242,16)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(242,16):remark #34051: REGISTER ALLOCATION : [glimmer_sparse_mp_sparse_destroy_workspace_] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90:242

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rbx rsi rdi]
        
    Routine temporaries
        Total         :      23
            Global    :      12
            Local     :      11
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_SPARSE::SPARSE_EASY_SOLVE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_SPARSE::SPARSE_EASY_SOLVE) [7] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(292,16)
  -> DELETED: (329,12) for_write_seq_lis
  -> DELETED: (330,12) for_write_seq_lis
  -> DELETED: (331,12) for_write_seq_lis
  -> DELETED: (331,12) for_write_seq_lis_xmit
  -> DELETED: (332,12) for_write_seq_lis
  -> DELETED: (332,12) for_write_seq_lis_xmit
  -> DELETED: (333,12) for_write_seq_lis
  -> DELETED: (333,12) for_write_seq_lis_xmit
  -> DELETED: (334,12) for_write_seq_lis
  -> DELETED: (334,12) for_write_seq_lis_xmit
  -> DELETED: (335,12) for_write_seq_lis
  -> DELETED: (335,12) for_write_seq_lis_xmit
  -> DELETED: (336,12) for_write_seq_lis
  -> DELETED: (336,12) for_write_seq_lis_xmit
  -> DELETED: (337,12) for_write_seq_lis
  -> DELETED: (337,12) for_write_seq_lis_xmit
  -> DELETED: (338,12) for_write_seq_lis
  -> DELETED: (338,12) for_write_seq_lis_xmit
  -> INLINE: (341,14) GLIMMER_SPARSE::SPARSE_SOLVER_DEFAULT_OPTIONS
  -> INLINE: (343,14) GLIMMER_SPARSE::SPARSE_ALLOCATE_WORKSPACE
  -> INLINE: (345,14) GLIMMER_SPARSE::SPARSE_SOLVER_PREPROCESS
  -> INLINE: (347,16) GLIMMER_SPARSE::SPARSE_SOLVE
  -> DELETED: (350,11) for_write_seq_lis
  -> DELETED: (351,11) for_write_seq_lis
  -> DELETED: (351,11) for_write_seq_lis_xmit
  -> DELETED: (351,11) for_write_seq_lis_xmit
  -> INLINE: (354,14) GLIMMER_SPARSE::SPARSE_SOLVER_POSTPROCESS
  -> (358,22) GLIMMER_SPARSE::HANDLE_SPARSE_ERROR
  -> (360,22) GLIMMER_SPARSE::HANDLE_SPARSE_ERROR
  -> INLINE: (364,14) GLIMMER_SPARSE::SPARSE_DESTROY_WORKSPACE


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(133,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (1, 0)
/glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(292,16):remark #34051: REGISTER ALLOCATION : [glimmer_sparse_mp_sparse_easy_solve_] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90:292

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     117
            Global    :      27
            Local     :      90
        Regenerable   :      52
        Spilled       :       5
        
    Routine stack
        Variables     :      52 bytes*
            Reads     :      13 [5.98e+00 ~ 6.0%]
            Writes    :      19 [1.20e+01 ~ 12.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_SPARSE::HANDLE_SPARSE_ERROR

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_SPARSE::HANDLE_SPARSE_ERROR) [8] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(368,16)
  -> INLINE: (420,14) GLIMMER_SPARSE::SPARSE_INTERPRET_ERROR


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(408,52)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(408,52)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(408,52)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(408,52)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(408,64)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(408,64)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(408,64)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(408,64)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(408,76)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(408,76)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(408,76)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(408,76)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(412,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between at (413:13) and at (413:13)
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(368,16):remark #34051: REGISTER ALLOCATION : [glimmer_sparse_mp_handle_sparse_error_] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90:368

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     295
            Global    :      90
            Local     :     205
        Regenerable   :     146
        Spilled       :      17
        
    Routine stack
        Variables     :    1488 bytes*
            Reads     :       2 [4.22e-01 ~ 0.4%]
            Writes    :      40 [7.61e+00 ~ 7.6%]
        Spills        :      72 bytes*
            Reads     :      16 [2.85e+00 ~ 2.8%]
            Writes    :      14 [2.30e+00 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_SPARSE::SPARSE_INTERPRET_ERROR

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_SPARSE::SPARSE_INTERPRET_ERROR) [9] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(264,16)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(264,16):remark #34051: REGISTER ALLOCATION : [glimmer_sparse_mp_sparse_interpret_error_] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90:264

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rsi rdi r8 r12]
        
    Routine temporaries
        Total         :      35
            Global    :      10
            Local     :      25
        Regenerable   :      17
        Spilled       :       2
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       3 [5.06e+00 ~ 5.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_SPARSE::SPARSE_SOLVER_DEFAULT_OPTIONS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_SPARSE::SPARSE_SOLVER_DEFAULT_OPTIONS) [10] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(64,16)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90(64,16):remark #34051: REGISTER ALLOCATION : [glimmer_sparse_mp_sparse_solver_default_options_] /glade/u/home/tvda/CISM/libglimmer-solve/glimmer_sparse.F90:64

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r8-r9 r14]
        
    Routine temporaries
        Total         :      29
            Global    :       8
            Local     :      21
        Regenerable   :       9
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
