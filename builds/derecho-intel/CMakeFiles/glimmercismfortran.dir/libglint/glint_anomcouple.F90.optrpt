Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: glint_anomcouple._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (glint_anomcouple._) [1] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(31,8)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(31,8):remark #34051: REGISTER ALLOCATION : [glint_anomcouple._] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90:31

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_ANOMCOUPLE::ANOMALY_CALC

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_ANOMCOUPLE::ANOMALY_CALC) [2] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(97,14)
  -> INLINE: (110,13) GLINT_ANOMCOUPLE::ANOMALY_INDEX


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(111,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(111,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(111,8)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(111,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(112,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(112,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(112,8)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(112,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(113,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(113,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(113,8)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(113,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(114,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(114,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(114,8)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(114,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(115,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(115,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(115,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(115,8)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(115,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(115,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(118,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(118,14)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(131,11)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(131,11)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(131,11)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(131,11)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(131,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(131,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(134,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(134,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(134,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(134,8)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(134,8)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(134,8)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(135,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(135,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(135,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(135,8)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(135,8)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(135,8)
   <Remainder>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(363,17) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(138,13)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(97,14):remark #34051: REGISTER ALLOCATION : [glint_anomcouple_mp_anomaly_calc_] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90:97

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   28[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm13]
        
    Routine temporaries
        Total         :     905
            Global    :     371
            Local     :     534
        Regenerable   :      20
        Spilled       :     171
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :    1240 bytes*
            Reads     :     302 [6.53e+00 ~ 6.5%]
            Writes    :     241 [2.67e+00 ~ 2.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_ANOMCOUPLE::ANOMALY_READCONFIG

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_ANOMCOUPLE::ANOMALY_READCONFIG) [3] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(144,14)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(144,14):remark #34026: call to memcpy implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(144,14):remark #34051: REGISTER ALLOCATION : [glint_anomcouple_mp_anomaly_readconfig_] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90:144

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r8 r14-r15]
        
    Routine temporaries
        Total         :      71
            Global    :       9
            Local     :      62
        Regenerable   :      45
        Spilled       :       2
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       1 [7.90e-01 ~ 0.8%]
            Writes    :       1 [7.90e-01 ~ 0.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_ANOMCOUPLE::ANOMALY_PRINTCONFIG

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_ANOMCOUPLE::ANOMALY_PRINTCONFIG) [4] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(176,14)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(176,14):remark #34051: REGISTER ALLOCATION : [glint_anomcouple_mp_anomaly_printconfig_] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90:176

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r8-r9 r12]
        
    Routine temporaries
        Total         :     197
            Global    :      28
            Local     :     169
        Regenerable   :     158
        Spilled       :       1
        
    Routine stack
        Variables     :     840 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      42 [1.89e+01 ~ 18.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_ANOMCOUPLE::ANOMALY_READDATA

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_ANOMCOUPLE::ANOMALY_READDATA) [5] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(203,14)
  -> (213,10) GLINT_ANOMCOUPLE::ANOMALY_READNC
  -> (214,10) GLINT_ANOMCOUPLE::ANOMALY_READNC
  -> (215,10) GLINT_ANOMCOUPLE::ANOMALY_READNC
  -> (216,10) GLINT_ANOMCOUPLE::ANOMALY_READNC


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(218,9)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(218,32)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(218,55)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(226,14)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(226,14)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(226,14)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(203,14):remark #34051: REGISTER ALLOCATION : [glint_anomcouple_mp_anomaly_readdata_] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90:203

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm14]
        
    Routine temporaries
        Total         :     334
            Global    :      69
            Local     :     265
        Regenerable   :      59
        Spilled       :       6
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       1 [1.05e-01 ~ 0.1%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [9.43e-02 ~ 0.1%]
            Writes    :       1 [9.43e-02 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_ANOMCOUPLE::ANOMALY_READNC

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_ANOMCOUPLE::ANOMALY_READNC) [6] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(241,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(281,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(287,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(309,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(309,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(309,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(309,5)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(309,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(309,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(310,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(310,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(310,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(310,5)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(310,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(310,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(328,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(328,8)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(328,8)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(328,8)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(328,8)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(296,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(241,14):remark #34051: REGISTER ALLOCATION : [glint_anomcouple_mp_anomaly_readnc_] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90:241

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :     864
            Global    :     213
            Local     :     651
        Regenerable   :     325
        Spilled       :      44
        
    Routine stack
        Variables     :    2524 bytes*
            Reads     :       3 [2.35e-01 ~ 0.2%]
            Writes    :      69 [3.62e+00 ~ 3.6%]
        Spills        :     304 bytes*
            Reads     :      73 [4.07e+00 ~ 4.1%]
            Writes    :      45 [1.63e+00 ~ 1.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_ANOMCOUPLE::ANOMALY_INDEX

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_ANOMCOUPLE::ANOMALY_INDEX) [7] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(347,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(363,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(347,14):remark #34051: REGISTER ALLOCATION : [glint_anomcouple_mp_anomaly_index_] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90:347

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0-zmm2]
        
    Routine temporaries
        Total         :      42
            Global    :      16
            Local     :      26
        Regenerable   :      11
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       4 [7.98e+00 ~ 8.0%]
            Writes    :       2 [9.39e-01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_ANOMCOUPLE::ANOMALY_INIT

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_ANOMCOUPLE::ANOMALY_INIT) [8] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(80,14)
  -> INLINE: (87,10) GLINT_ANOMCOUPLE::ANOMALY_READCONFIG
  -> INLINE: (89,13) GLINT_ANOMCOUPLE::ANOMALY_READDATA
    -> (213,10) GLINT_ANOMCOUPLE::ANOMALY_READNC
    -> (214,10) GLINT_ANOMCOUPLE::ANOMALY_READNC
    -> (215,10) GLINT_ANOMCOUPLE::ANOMALY_READNC
    -> (216,10) GLINT_ANOMCOUPLE::ANOMALY_READNC
  -> INLINE: (90,13) GLINT_ANOMCOUPLE::ANOMALY_PRINTCONFIG


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(218,9) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(218,32) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(218,55) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(226,14) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(226,14) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(226,14) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(235,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(117,13)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(80,14):remark #34026: call to memcpy implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(144,14):remark #34026: call to memcpy implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90(80,14):remark #34051: REGISTER ALLOCATION : [glint_anomcouple_mp_anomaly_init_] /glade/u/home/tvda/CISM/libglint/glint_anomcouple.F90:80

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm14]
        
    Routine temporaries
        Total         :     586
            Global    :      98
            Local     :     488
        Regenerable   :     264
        Spilled       :      13
        
    Routine stack
        Variables     :     852 bytes*
            Reads     :       2 [2.27e-01 ~ 0.2%]
            Writes    :      43 [2.87e+00 ~ 2.9%]
        Spills        :      64 bytes*
            Reads     :      10 [6.38e-01 ~ 0.6%]
            Writes    :       8 [5.09e-01 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
