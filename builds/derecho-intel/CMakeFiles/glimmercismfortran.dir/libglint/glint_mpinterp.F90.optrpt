Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: glint_mpinterp._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (glint_mpinterp._) [1] /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(31,8)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(31,8):remark #34051: REGISTER ALLOCATION : [glint_mpinterp._] /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90:31

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_MPINTERP::NEW_MPINTERP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_MPINTERP::NEW_MPINTERP) [2] /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(62,14)
  -> (215,28) GLINT_MPINTERP::LINLOC
  -> (216,28) GLINT_MPINTERP::LINLOC
  -> (219,28) GLINT_MPINTERP::LINLOC
  -> (220,28) GLINT_MPINTERP::LINLOC
  -> (223,28) GLINT_MPINTERP::LINLOC
  -> (224,28) GLINT_MPINTERP::LINLOC
  -> (227,28) GLINT_MPINTERP::LINLOC
  -> (228,28) GLINT_MPINTERP::LINLOC
  -> (231,28) GLINT_MPINTERP::LINLOC
  -> (232,28) GLINT_MPINTERP::LINLOC
  -> (235,28) GLINT_MPINTERP::LINLOC
  -> (236,28) GLINT_MPINTERP::LINLOC
  -> (239,28) GLINT_MPINTERP::LINLOC
  -> (240,28) GLINT_MPINTERP::LINLOC
  -> (243,28) GLINT_MPINTERP::LINLOC
  -> (244,28) GLINT_MPINTERP::LINLOC
  -> (247,28) GLINT_MPINTERP::LINLOC
  -> (248,28) GLINT_MPINTERP::LINLOC


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(178,48)
<Distributed chunk1>
   remark #25426: Loop Distributed (2 way) 
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(151,8)
      remark #25084: Preprocess Loopnests: Moving Out Store    [ /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(172,8) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 68
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(174,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(174,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(174,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(174,5)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(174,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(174,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(176,5)
<Distributed chunk1>
   remark #25426: Loop Distributed (2 way) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(177,8)
      remark #25084: Preprocess Loopnests: Moving Out Store    [ /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(193,8) ]
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(177,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(197,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(197,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(197,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(198,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(198,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(198,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(199,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(199,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(199,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(200,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(200,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(200,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(201,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(201,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(201,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(202,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(202,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(202,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(203,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(203,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(203,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(204,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(204,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(204,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(205,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(205,5)
      remark #25399: memcopy generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(205,5)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(205,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(207,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(207,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(207,5)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(207,5)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(208,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(208,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(208,5)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(208,5)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(209,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(209,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(209,5)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(209,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(217,18)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(214,8)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(205,5):remark #34026: call to memcpy implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(62,14):remark #34051: REGISTER ALLOCATION : [glint_mpinterp_mp_new_mpinterp_] /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90:62

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    8885
            Global    :    1119
            Local     :    7766
        Regenerable   :     536
        Spilled       :     511
        
    Routine stack
        Variables     :    5696 bytes*
            Reads     :     535 [1.13e+00 ~ 1.1%]
            Writes    :    1364 [3.52e+00 ~ 3.5%]
        Spills        :    3960 bytes*
            Reads     :     930 [2.09e+01 ~ 20.9%]
            Writes    :     693 [3.59e+00 ~ 3.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_MPINTERP::LINLOC

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_MPINTERP::LINLOC) [3] /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(330,20)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(345,14)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(354,14)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(330,20):remark #34051: REGISTER ALLOCATION : [glint_mpinterp_mp_linloc_] /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90:330

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      26
            Global    :      12
            Local     :      14
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_MPINTERP::MEAN_PRESERVE_INTERP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_MPINTERP::MEAN_PRESERVE_INTERP) [4] /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(275,14)
  -> INLINE: (290,18) GLINT_MPINTERP::LINLOC
  -> INLINE: (319,27) GLINT_MPINTERP::LINLOC


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(294,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(294,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(294,5)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(294,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(294,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(294,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(294,5)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(294,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(297,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(297,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(297,17)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(297,17)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(298,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(298,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(298,17)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(298,17)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(300,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(300,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(300,17)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(300,17)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(301,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(301,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(301,17)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(301,17)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(302,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(302,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(302,17)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(302,17)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(311,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(311,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(311,17)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(311,17)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(313,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(313,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(313,17)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(313,17)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(297,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(297,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(297,17)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(297,17)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(298,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(298,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(298,17)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(298,17)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(300,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(300,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(300,17)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(300,17)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(301,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(301,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(301,17)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(301,17)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(302,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(302,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(302,17)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(302,17)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(311,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(311,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(311,17)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(311,17)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(313,17)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(313,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(313,17)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(313,17)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(324,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(324,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(324,5)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(324,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(292,5)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(291,8)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(345,14) inlined into /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(318,18)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(354,14) inlined into /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(318,18)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(321,5)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(320,8)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(345,14) inlined into /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(347,27)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(354,14) inlined into /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(347,27)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90(275,14):remark #34051: REGISTER ALLOCATION : [glint_mpinterp_mp_mean_preserve_interp_] /glade/u/home/tvda/CISM/libglint/glint_mpinterp.F90:275

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :     611
            Global    :     312
            Local     :     299
        Regenerable   :      14
        Spilled       :      98
        
    Routine stack
        Variables     :      24 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       2 [2.16e-02 ~ 0.0%]
        Spills        :     664 bytes*
            Reads     :     179 [6.09e+00 ~ 6.1%]
            Writes    :     111 [1.54e+00 ~ 1.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
