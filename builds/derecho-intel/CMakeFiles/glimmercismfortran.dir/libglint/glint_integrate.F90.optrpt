Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: glint_integrate._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (glint_integrate._) [1] /glade/u/home/tvda/CISM/libglint/glint_integrate.F90(32,8)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_integrate.F90(32,8):remark #34051: REGISTER ALLOCATION : [glint_integrate._] /glade/u/home/tvda/CISM/libglint/glint_integrate.F90:32

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTEGRATE::ROMBERG_INT

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTEGRATE::ROMBERG_INT) [2] /glade/u/home/tvda/CISM/libglint/glint_integrate.F90(51,31)
  -> INDIRECT-: (74,11)  glint_integrate_mp_romberg_int_$FCT_V$29.0.2
  -> INDIRECT-: (74,20)  glint_integrate_mp_romberg_int_$FCT_V$29.0.2
  -> INDIRECT-: (82,15)  glint_integrate_mp_romberg_int_$FCT_V$29.0.2


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_integrate.F90(81,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between at (82:15) and at (82:15)
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_integrate.F90(88,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between t(j) (90:11) and t(j+1) (90:11)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 4
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_integrate.F90(88,8)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_integrate.F90(95,5)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_integrate.F90(51,31):remark #34051: REGISTER ALLOCATION : [glint_integrate_mp_romberg_int_] /glade/u/home/tvda/CISM/libglint/glint_integrate.F90:51

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0-zmm6]
        
    Routine temporaries
        Total         :      83
            Global    :      37
            Local     :      46
        Regenerable   :       6
        Spilled       :      11
        
    Routine stack
        Variables     :      64 bytes*
            Reads     :       4 [1.47e+00 ~ 1.5%]
            Writes    :       4 [3.56e+00 ~ 3.6%]
        Spills        :      48 bytes*
            Reads     :       8 [8.82e+00 ~ 8.8%]
            Writes    :       7 [4.17e+00 ~ 4.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTEGRATE::ROMBERG_INT_PRMS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTEGRATE::ROMBERG_INT_PRMS) [3] /glade/u/home/tvda/CISM/libglint/glint_integrate.F90(108,31)
  -> INDIRECT-: (133,11)  glint_integrate_mp_romberg_int_prms_$FCT_V$38.0.3
  -> INDIRECT-: (133,27)  glint_integrate_mp_romberg_int_prms_$FCT_V$38.0.3
  -> INDIRECT-: (141,15)  glint_integrate_mp_romberg_int_prms_$FCT_V$38.0.3


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_integrate.F90(140,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between at (141:15) and at (141:15)
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_integrate.F90(147,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between t(j) (149:11) and t(j+1) (149:11)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 4
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_integrate.F90(147,8)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_integrate.F90(154,5)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_integrate.F90(108,31):remark #34051: REGISTER ALLOCATION : [glint_integrate_mp_romberg_int_prms_] /glade/u/home/tvda/CISM/libglint/glint_integrate.F90:108

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   21[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm6]
        
    Routine temporaries
        Total         :      88
            Global    :      38
            Local     :      50
        Regenerable   :       6
        Spilled       :      12
        
    Routine stack
        Variables     :      64 bytes*
            Reads     :       4 [1.41e+00 ~ 1.4%]
            Writes    :       4 [3.43e+00 ~ 3.4%]
        Spills        :      56 bytes*
            Reads     :       9 [8.94e+00 ~ 8.9%]
            Writes    :       8 [4.46e+00 ~ 4.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
