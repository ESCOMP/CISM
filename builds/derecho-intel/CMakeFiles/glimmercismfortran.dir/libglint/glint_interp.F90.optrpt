Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: glint_interp._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (glint_interp._) [1] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(31,8)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(31,8):remark #34051: REGISTER ALLOCATION : [glint_interp._] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:31

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::NEW_DOWNSCALE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::NEW_DOWNSCALE) [2] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(89,14)
  -> (132,10) GLINT_INTERP::INDEX_LOCAL_BOXES
  -> INLINE: (139,10) GLINT_INTERP::CALC_GRID_ANGLE
  -> INLINE: (159,10) GLINT_INTERP::NEW_UPSCALE
    -> INLINE: (1236,18) GLINT_INTERP::LON_BETWEEN


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1225,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1225,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between UPS(:,:) (1225:5) and UPS (1225:5)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1225,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1225,19) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1225,19) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between UPS(:,:) (1225:19) and UPS (1225:19)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1225,19) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1254,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1254,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between UPS(:,:) (1254:5) and UPS (1254:5)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1254,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1256,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1257,8) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between UPS (1258:11) and UPS(UPS(i,j),UPS(i,j)) (1258:11)
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(160,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(160,5)
      remark #25399: memcopy generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(160,5)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(160,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(160,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(160,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(160,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(160,5)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(160,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(160,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(161,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(161,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(161,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(161,5)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(161,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(161,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(161,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(161,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(161,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(161,5)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(161,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(161,5)
   <Remainder>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1182,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(167,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1158,8) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(167,10)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(149,5)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(148,8)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1252,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1251,8) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1237,14) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1248,14) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(187,10)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(89,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglint/glint_interp.F90(89,14):remark #34026: call to memcpy implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglint/glint_interp.F90(1188,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglint/glint_interp.F90(160,5):remark #34026: call to memcpy implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglint/glint_interp.F90(89,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_new_downscale_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:89

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     899
            Global    :     276
            Local     :     623
        Regenerable   :     140
        Spilled       :      77
        
    Routine stack
        Variables     :     640 bytes*
            Reads     :      88 [2.02e+01 ~ 20.2%]
            Writes    :      76 [1.23e+00 ~ 1.2%]
        Spills        :     568 bytes*
            Reads     :     147 [1.09e+01 ~ 10.9%]
            Writes    :     101 [6.61e-01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::INDEX_LOCAL_BOXES

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::INDEX_LOCAL_BOXES) [3] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1000,14)
  -> INLINE: (1047,16) GLINT_INTERP::FIND_LL_INDEX
    -> INLINE: (974,12) GLINT_INTERP::LON_BETWEEN
  -> INLINE: (1106,16) GLINT_INTERP::CALC_FRACTIONAL


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(973,5) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1075,16)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /glade/u/home/tvda/CISM/libglint/glint_interp.F90(974,12) ]
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1122,5)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1121,8)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(993,8) inlined into /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1075,16)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(1000,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_index_local_boxes_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:1000

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     751
            Global    :     118
            Local     :     633
        Regenerable   :      88
        Spilled       :      41
        
    Routine stack
        Variables     :     256 bytes*
            Reads     :      10 [1.58e+00 ~ 1.6%]
            Writes    :      18 [3.30e-01 ~ 0.3%]
        Spills        :     288 bytes*
            Reads     :     103 [1.05e+01 ~ 10.5%]
            Writes    :      42 [3.00e+00 ~ 3.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::INTERP_WIND_TO_LOCAL

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::INTERP_WIND_TO_LOCAL) [4] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(168,14)
  -> (202,10) GLINT_INTERP::INTERP_TO_LOCAL
  -> (203,10) GLINT_INTERP::INTERP_TO_LOCAL


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(214,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(214,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(214,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(214,5)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(214,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(214,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(215,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(215,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(215,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(215,5)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(215,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(215,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(168,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_interp_wind_to_local_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:168

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     473
            Global    :     179
            Local     :     294
        Regenerable   :      27
        Spilled       :     106
        
    Routine stack
        Variables     :     192 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      22 [5.31e-01 ~ 0.5%]
        Spills        :     784 bytes*
            Reads     :     190 [1.36e+01 ~ 13.6%]
            Writes    :     125 [3.82e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::INTERP_TO_LOCAL

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::INTERP_TO_LOCAL) [5] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(221,14)
  -> INDIRECT-: (418,25)  glint_interp_mp_interp_to_local_$GLOBAL_FN_V$13ae.0.4
  -> INDIRECT-: (419,25)  glint_interp_mp_interp_to_local_$GLOBAL_FN_V$13ae.0.4
  -> INDIRECT-: (420,25)  glint_interp_mp_interp_to_local_$GLOBAL_FN_V$13ae.0.4
  -> INDIRECT-: (421,25)  glint_interp_mp_interp_to_local_$GLOBAL_FN_V$13ae.0.4
  -> INLINE: (444,65) GLINT_INTERP::BILINEAR_INTERP
  -> INLINE: (445,65) GLINT_INTERP::BILINEAR_INTERP


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(350,20)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(459,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(459,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(459,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(459,8)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(459,8)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(459,8)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(465,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(465,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(465,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(465,8)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(465,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(465,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(449,8)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(448,11)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(221,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_interp_to_local_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:221

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :    1032
            Global    :     121
            Local     :     911
        Regenerable   :      67
        Spilled       :      34
        
    Routine stack
        Variables     :     400 bytes*
            Reads     :      28 [9.00e-01 ~ 0.9%]
            Writes    :      92 [1.62e+00 ~ 1.6%]
        Spills        :     232 bytes*
            Reads     :     155 [7.76e+00 ~ 7.8%]
            Writes    :      38 [2.51e+00 ~ 2.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::COPY_TO_LOCAL

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::COPY_TO_LOCAL) [6] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(477,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(517,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(518,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(518,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(517,8)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(518,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(518,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(532,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(532,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(532,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(532,5)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(532,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(532,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(477,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_copy_to_local_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:477

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     278
            Global    :      90
            Local     :     188
        Regenerable   :      24
        Spilled       :      46
        
    Routine stack
        Variables     :     104 bytes*
            Reads     :       6 [2.94e-01 ~ 0.3%]
            Writes    :      25 [1.40e+00 ~ 1.4%]
        Spills        :     312 bytes*
            Reads     :      71 [8.70e+00 ~ 8.7%]
            Writes    :      54 [3.45e+00 ~ 3.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::MEAN_TO_LOCAL

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::MEAN_TO_LOCAL) [7] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(543,14)
  -> INDIRECT-: (616,57)  glint_interp_mp_mean_to_local_$GLOBAL_FN_V$1687.0.6


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(593,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(593,5)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(593,5)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(593,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(594,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(594,5)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(594,5)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(594,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(628,27)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(628,27)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(628,27)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(628,27)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(629,27)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(629,27)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(629,27)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(629,27)
   <Remainder loop for vectorization>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(624,5)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(623,8)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(593,5):remark #34026: call to memset implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglint/glint_interp.F90(594,5):remark #34026: call to memset implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglint/glint_interp.F90(543,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_mean_to_local_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:543

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     342
            Global    :     132
            Local     :     210
        Regenerable   :      39
        Spilled       :      47
        
    Routine stack
        Variables     :      40 bytes*
            Reads     :      10 [2.83e+00 ~ 2.8%]
            Writes    :       8 [2.06e+00 ~ 2.1%]
        Spills        :     320 bytes*
            Reads     :     102 [6.54e+00 ~ 6.5%]
            Writes    :      44 [1.65e+00 ~ 1.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::POINTWISE_TO_GLOBAL

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::POINTWISE_TO_GLOBAL) [8] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(635,14)
  -> INLINE: (675,28) GLINT_INTERP::BILINEAR_INTERP


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(674,14)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25436: completely unrolled by 2  

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(674,14)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25436: completely unrolled by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(674,14)
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(674,14)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25436: completely unrolled by 2  

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(674,14)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25436: completely unrolled by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(674,14)
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(678,5)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(677,8)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(635,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_pointwise_to_global_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:635

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :     147
            Global    :      57
            Local     :      90
        Regenerable   :       7
        Spilled       :      27
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [4.00e+00 ~ 4.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     176 bytes*
            Reads     :      32 [2.17e+01 ~ 21.7%]
            Writes    :      22 [9.62e+00 ~ 9.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::LOCAL_TO_GLOBAL_AVG

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::LOCAL_TO_GLOBAL_AVG) [9] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(684,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(722,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(722,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(722,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(722,5)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(722,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(722,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(725,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(725,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(725,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(727,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(727,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(727,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(741,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(741,8)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(741,8)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(741,8)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(743,8)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(744,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between global(ups(i,j),ups(i,j)) (747:16) and global(ups(i,j),ups(i,j)) (747:16)
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(759,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(759,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(759,8)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(759,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(760,11)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(760,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(760,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(762,11)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(762,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(762,11)
   <Remainder>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(741,8):remark #34026: call to memset implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglint/glint_interp.F90(684,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_local_to_global_avg_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:684

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm14]
        
    Routine temporaries
        Total         :     635
            Global    :     184
            Local     :     451
        Regenerable   :      37
        Spilled       :      55
        
    Routine stack
        Variables     :     392 bytes*
            Reads     :      31 [4.41e-01 ~ 0.4%]
            Writes    :      70 [2.10e+00 ~ 2.1%]
        Spills        :     384 bytes*
            Reads     :      99 [5.76e+00 ~ 5.8%]
            Writes    :      60 [1.46e+00 ~ 1.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::LOCAL_TO_GLOBAL_SUM

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::LOCAL_TO_GLOBAL_SUM) [10] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(775,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(809,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(809,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(809,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(809,5)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(809,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(809,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(812,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(812,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(812,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(814,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(814,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(814,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(828,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(829,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between global(ups(i,j),ups(i,j)) (830:14) and global(ups(i,j),ups(i,j)) (830:14)
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(828,8)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(829,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between global(ups(i,j),ups(i,j)) (830:14) and global(ups(i,j),ups(i,j)) (830:14)
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(775,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_local_to_global_sum_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:775

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   26[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm11]
        
    Routine temporaries
        Total         :     392
            Global    :     106
            Local     :     286
        Regenerable   :      24
        Spilled       :      38
        
    Routine stack
        Variables     :     288 bytes*
            Reads     :      16 [3.63e-01 ~ 0.4%]
            Writes    :      43 [1.96e+00 ~ 2.0%]
        Spills        :     264 bytes*
            Reads     :      56 [6.25e+00 ~ 6.3%]
            Writes    :      45 [1.55e+00 ~ 1.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::LOCAL_TO_GLOBAL_MIN

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::LOCAL_TO_GLOBAL_MIN) [11] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(844,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(878,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(878,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(878,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(878,5)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(878,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(878,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(881,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(881,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(881,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(883,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(883,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(883,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(899,8)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(900,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(900,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(907,8)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(908,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between global(ups(i,j),ups(i,j)) (910:17) and global(ups(i,j),ups(i,j)) (910:17)
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(844,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_local_to_global_min_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:844

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   26[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm11]
        
    Routine temporaries
        Total         :     440
            Global    :     138
            Local     :     302
        Regenerable   :      26
        Spilled       :      58
        
    Routine stack
        Variables     :     288 bytes*
            Reads     :      16 [3.23e-01 ~ 0.3%]
            Writes    :      43 [1.74e+00 ~ 1.7%]
        Spills        :     416 bytes*
            Reads     :      88 [8.91e+00 ~ 8.9%]
            Writes    :      63 [2.02e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::BILINEAR_INTERP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::BILINEAR_INTERP) [12] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(925,21)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(925,21):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_bilinear_interp_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:925

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rdx rsi rdi zmm0-zmm4]
        
    Routine temporaries
        Total         :      31
            Global    :       0
            Local     :      31
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::FIND_LL_INDEX

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::FIND_LL_INDEX) [13] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(949,14)
  -> INLINE: (974,12) GLINT_INTERP::LON_BETWEEN


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(973,5)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /glade/u/home/tvda/CISM/libglint/glint_interp.F90(974,12) ]
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(993,8)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(949,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_find_ll_index_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:949

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :      65
            Global    :      32
            Local     :      33
        Regenerable   :       3
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       4 [1.43e+00 ~ 1.4%]
            Writes    :       2 [1.43e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::CALC_GRID_ANGLE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::CALC_GRID_ANGLE) [14] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1128,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1182,5)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1158,8)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(1128,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_calc_grid_angle_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:1128

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     189
            Global    :      58
            Local     :     131
        Regenerable   :      53
        Spilled       :      18
        
    Routine stack
        Variables     :     144 bytes*
            Reads     :      12 [5.24e+00 ~ 5.2%]
            Writes    :      12 [6.74e+00 ~ 6.7%]
        Spills        :     144 bytes*
            Reads     :      34 [1.53e+01 ~ 15.3%]
            Writes    :      18 [2.51e+00 ~ 2.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::NEW_UPSCALE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::NEW_UPSCALE) [15] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1188,14)
  -> INLINE: (1236,18) GLINT_INTERP::LON_BETWEEN


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1225,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1225,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1225,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1225,19)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1225,19)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1225,19)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1254,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1254,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1254,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1254,5)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1254,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1254,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1256,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1257,8)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between ups(ups(i,j),ups(i,j)) (1258:11) and ups(i,j) (1258:11)
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1256,5)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1257,8)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between ups(i,j) (1258:11) and ups(ups(i,j),ups(i,j)) (1258:11)
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1252,5)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1251,8)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1237,14)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1248,14)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(1188,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (1, 0)
/glade/u/home/tvda/CISM/libglint/glint_interp.F90(1188,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_new_upscale_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:1188

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     473
            Global    :     145
            Local     :     328
        Regenerable   :      61
        Spilled       :      39
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :       5 [4.04e+00 ~ 4.0%]
            Writes    :       2 [2.21e-01 ~ 0.2%]
        Spills        :     272 bytes*
            Reads     :      87 [1.50e+01 ~ 15.0%]
            Writes    :      54 [3.77e-01 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::COPY_UPSCALE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::COPY_UPSCALE) [16] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1268,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1288,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1288,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1288,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1288,5)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1288,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1288,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1289,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1289,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1289,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1289,5)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1289,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1289,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1290,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1290,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1290,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1290,5)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1290,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1290,5)
   <Remainder>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(1268,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (1, 0)
/glade/u/home/tvda/CISM/libglint/glint_interp.F90(1268,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_copy_upscale_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:1268

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     394
            Global    :     139
            Local     :     255
        Regenerable   :      38
        Spilled       :      35
        
    Routine stack
        Variables     :      24 bytes*
            Reads     :       3 [2.51e-01 ~ 0.3%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     224 bytes*
            Reads     :      44 [6.35e+00 ~ 6.4%]
            Writes    :      36 [1.84e+00 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::LON_BETWEEN

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::LON_BETWEEN) [17] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1298,20)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(1298,20):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_lon_between_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:1298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rsi rdi zmm0-zmm4]
        
    Routine temporaries
        Total         :      34
            Global    :      10
            Local     :      24
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_INTERP::CALC_FRACTIONAL

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_INTERP::CALC_FRACTIONAL) [18] /glade/u/home/tvda/CISM/libglint/glint_interp.F90(1334,14)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_interp.F90(1334,14):remark #34051: REGISTER ALLOCATION : [glint_interp_mp_calc_fractional_] /glade/u/home/tvda/CISM/libglint/glint_interp.F90:1334

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rsi rdi r8-r11 zmm0-zmm15]
        
    Routine temporaries
        Total         :      97
            Global    :      18
            Local     :      79
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
