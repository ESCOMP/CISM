Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: glint_global_interp._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (glint_global_interp._) [1] /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(33,8)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(33,8):remark #34051: REGISTER ALLOCATION : [glint_global_interp._] /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90:33

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_GLOBAL_INTERP::GLOBAL_INTERP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_GLOBAL_INTERP::GLOBAL_INTERP) [2] /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(42,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(151,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(151,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(151,5)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(151,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(152,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(152,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(152,5)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(152,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(153,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(153,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(153,5)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(153,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(154,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(154,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(154,5)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(154,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(169,8)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(169,8)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(169,8)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(171,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(171,8)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(171,8)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(171,8)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(175,8)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(175,8)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(175,8)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(177,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(177,8)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(177,8)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(177,8)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(202,5)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(203,20) ]
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(211,5)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(212,21) ]
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(221,5)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(224,14) ]
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(241,5)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(244,14) ]
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(322,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(331,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(331,8)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(346,11)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(346,11)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(346,11)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(354,8)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(373,11)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(374,14)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(374,14)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(399,11)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(404,17)
            remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model   [ /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(419,23) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(441,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(442,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between ao(i,j) (443:14) and ao(i-iilo,j) (443:14)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(442,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(441,8)
<Multiversioned v2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(442,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between ao(i,j) (443:14) and ao(i-iilo,j) (443:14)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(442,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(451,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(451,9)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(451,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(456,27)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(456,27)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(456,27)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(457,28)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(457,28)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(457,28)
   <Remainder>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(268,20)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(294,20)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(332,21):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
/glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(332,21):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
/glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(375,27):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
/glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(375,27):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
/glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(177,8):remark #34026: call to memset implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(171,8):remark #34026: call to memset implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(42,14):remark #34051: REGISTER ALLOCATION : [glint_global_interp_mp_global_interp_] /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90:42

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     890
            Global    :     341
            Local     :     549
        Regenerable   :      46
        Spilled       :     111
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       3 [5.76e-02 ~ 0.1%]
        Spills        :     848 bytes*
            Reads     :     282 [4.71e+00 ~ 4.7%]
            Writes    :     156 [2.18e+00 ~ 2.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_GLOBAL_INTERP::ERR_CHECK

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_GLOBAL_INTERP::ERR_CHECK) [3] /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(494,14)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(494,14):remark #34051: REGISTER ALLOCATION : [glint_global_interp_mp_err_check_] /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90:494

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8-r9 r13-r14]
        
    Routine temporaries
        Total         :      22
            Global    :      10
            Local     :      12
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLINT_GLOBAL_INTERP::INTERP_ERROR

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLINT_GLOBAL_INTERP::INTERP_ERROR) [4] /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(463,14)
  -> INLINE: (476,10) GLINT_GLOBAL_INTERP::ERR_CHECK
  -> INLINE: (477,10) GLINT_GLOBAL_INTERP::ERR_CHECK
  -> INLINE: (478,10) GLINT_GLOBAL_INTERP::ERR_CHECK
  -> INLINE: (479,10) GLINT_GLOBAL_INTERP::ERR_CHECK
  -> INLINE: (480,10) GLINT_GLOBAL_INTERP::ERR_CHECK
  -> INLINE: (481,10) GLINT_GLOBAL_INTERP::ERR_CHECK
  -> INLINE: (482,10) GLINT_GLOBAL_INTERP::ERR_CHECK
  -> INLINE: (483,10) GLINT_GLOBAL_INTERP::ERR_CHECK
  -> INLINE: (484,10) GLINT_GLOBAL_INTERP::ERR_CHECK
  -> INLINE: (485,10) GLINT_GLOBAL_INTERP::ERR_CHECK
  -> INLINE: (486,10) GLINT_GLOBAL_INTERP::ERR_CHECK
  -> INLINE: (487,10) GLINT_GLOBAL_INTERP::ERR_CHECK


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglint/glint_global_interp.F90(463,14):remark #34051: REGISTER ALLOCATION : [glint_global_interp_mp_interp_error_] /glade/u/home/tvda/CISM/libglint/glint_global_interp.F90:463

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8-r9 r14-r15]
        
    Routine temporaries
        Total         :     127
            Global    :      11
            Local     :     116
        Regenerable   :     115
        Spilled       :       2
        
    Routine stack
        Variables     :     104 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       6 [4.86e+00 ~ 4.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
