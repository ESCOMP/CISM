Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: glad_type._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (glad_type._) [1] /glade/u/home/tvda/CISM/libglad/glad_type.F90(34,8)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_type.F90(34,8):remark #34051: REGISTER ALLOCATION : [glad_type._] /glade/u/home/tvda/CISM/libglad/glad_type.F90:34

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_TYPE::GLAD_I_ALLOCATE_GCM

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_TYPE::GLAD_I_ALLOCATE_GCM) [2] /glade/u/home/tvda/CISM/libglad/glad_type.F90(119,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(151,48)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(151,48)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(151,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(151,48)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(151,48)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(151,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(152,48)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(152,48)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(152,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(152,48)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(152,48)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(152,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(153,60)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(153,60)
   <Multiversioned v1>
      remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(153,60)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(153,60)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(153,60)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(153,60)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(153,60)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(155,48)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(155,48)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(155,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(155,48)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(155,48)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(155,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(156,48)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(156,48)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(156,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(156,48)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(156,48)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(156,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(158,47)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(158,47)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(158,47)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(158,47)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(158,47)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(158,47)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(159,47)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(159,47)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(159,47)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(159,47)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(159,47)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(159,47)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(160,47)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(160,47)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(160,47)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(160,47)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(160,47)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(160,47)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_type.F90(119,14):remark #34051: REGISTER ALLOCATION : [glad_type_mp_glad_i_allocate_gcm_] /glade/u/home/tvda/CISM/libglad/glad_type.F90:119

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     951
            Global    :     318
            Local     :     633
        Regenerable   :      84
        Spilled       :      68
        
    Routine stack
        Variables     :      76 bytes*
            Reads     :      25 [3.73e-01 ~ 0.4%]
            Writes    :       3 [4.48e-02 ~ 0.0%]
        Spills        :     496 bytes*
            Reads     :      88 [3.54e+00 ~ 3.5%]
            Writes    :      76 [1.19e+00 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_TYPE::GLAD_I_READCONFIG

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_TYPE::GLAD_I_READCONFIG) [3] /glade/u/home/tvda/CISM/libglad/glad_type.F90(174,14)
  -> INLINE: (209,10) GLAD_TYPE::GLAD_NC_READPARAMS


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(243,13) inlined into /glade/u/home/tvda/CISM/libglad/glad_type.F90(237,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(253,13) inlined into /glade/u/home/tvda/CISM/libglad/glad_type.F90(237,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_type.F90(174,14):remark #34051: REGISTER ALLOCATION : [glad_type_mp_glad_i_readconfig_] /glade/u/home/tvda/CISM/libglad/glad_type.F90:174

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rsi rdi r8 r12-r13 r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :      91
            Global    :      14
            Local     :      77
        Regenerable   :      52
        Spilled       :       3
        
    Routine stack
        Variables     :      24 bytes*
            Reads     :       3 [3.26e+00 ~ 3.3%]
            Writes    :       1 [3.62e-01 ~ 0.4%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_TYPE::GLAD_NC_READPARAMS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_TYPE::GLAD_NC_READPARAMS) [4] /glade/u/home/tvda/CISM/libglad/glad_type.F90(215,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(243,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_type.F90(253,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_type.F90(215,14):remark #34051: REGISTER ALLOCATION : [glad_type_mp_glad_nc_readparams_] /glade/u/home/tvda/CISM/libglad/glad_type.F90:215

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8 r12-r14]
        
    Routine temporaries
        Total         :      59
            Global    :      12
            Local     :      47
        Regenerable   :      31
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [3.16e+00 ~ 3.2%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_TYPE::GLAD_I_PRINTCONFIG

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_TYPE::GLAD_I_PRINTCONFIG) [5] /glade/u/home/tvda/CISM/libglad/glad_type.F90(263,14)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_type.F90(263,14):remark #34051: REGISTER ALLOCATION : [glad_type_mp_glad_i_printconfig_] /glade/u/home/tvda/CISM/libglad/glad_type.F90:263

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8-r9 r13 zmm0]
        
    Routine temporaries
        Total         :     104
            Global    :      12
            Local     :      92
        Regenerable   :      88
        Spilled       :       1
        
    Routine stack
        Variables     :     200 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      20 [1.63e+01 ~ 16.3%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
