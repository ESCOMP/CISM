Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: glad_main._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (glad_main._) [1] /glade/u/home/tvda/CISM/libglad/glad_main.F90(31,8)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(31,8):remark #34051: REGISTER ALLOCATION : [glad_main._] /glade/u/home/tvda/CISM/libglad/glad_main.F90:31

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::GLAD_GET_GRID_SIZE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::GLAD_GET_GRID_SIZE) [2] /glade/u/home/tvda/CISM/libglad/glad_main.F90(299,14)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(299,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(327,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(299,14):remark #34051: REGISTER ALLOCATION : [glad_main_mp_glad_get_grid_size_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:299

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rsi rdi r8-r10 zmm0-zmm4]
        
    Routine temporaries
        Total         :      50
            Global    :      16
            Local     :      34
        Regenerable   :       3
        Spilled       :       0
        
    Routine stack
        Variables     :     180 bytes*
            Reads     :       4 [4.21e+00 ~ 4.2%]
            Writes    :      14 [2.53e+01 ~ 25.3%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::GLAD_GET_GRID_INDICES

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::GLAD_GET_GRID_INDICES) [3] /glade/u/home/tvda/CISM/libglad/glad_main.F90(414,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(477,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(477,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(477,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(499,9)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(499,9)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(496,5)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(495,8)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(414,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(454,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(464,31):remark #34026: call to memmove implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglad/glad_main.F90(469,31):remark #34026: call to memmove implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglad/glad_main.F90(477,5):remark #34026: call to memset implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglad/glad_main.F90(483,37):remark #34026: call to memmove implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglad/glad_main.F90(485,37):remark #34026: call to memmove implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglad/glad_main.F90(500,31):remark #34026: call to memmove implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglad/glad_main.F90(414,14):remark #34051: REGISTER ALLOCATION : [glad_main_mp_glad_get_grid_indices_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:414

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :     312
            Global    :      69
            Local     :     243
        Regenerable   :      93
        Spilled       :      20
        
    Routine stack
        Variables     :     356 bytes*
            Reads     :      16 [1.68e+00 ~ 1.7%]
            Writes    :      38 [5.17e+00 ~ 5.2%]
        Spills        :     120 bytes*
            Reads     :      20 [9.46e+00 ~ 9.5%]
            Writes    :      15 [2.96e+00 ~ 3.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::GLAD_GET_LAT_LON

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::GLAD_GET_LAT_LON) [4] /glade/u/home/tvda/CISM/libglad/glad_main.F90(508,14)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(508,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(534,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(541,31):remark #34026: call to memmove implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglad/glad_main.F90(546,31):remark #34026: call to memmove implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglad/glad_main.F90(508,14):remark #34051: REGISTER ALLOCATION : [glad_main_mp_glad_get_lat_lon_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:508

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :      98
            Global    :      28
            Local     :      70
        Regenerable   :      29
        Spilled       :       9
        
    Routine stack
        Variables     :     180 bytes*
            Reads     :       2 [1.36e+00 ~ 1.4%]
            Writes    :      14 [1.63e+01 ~ 16.3%]
        Spills        :      32 bytes*
            Reads     :       5 [1.93e+00 ~ 1.9%]
            Writes    :       4 [1.93e+00 ~ 1.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::GLAD_GET_AREAS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::GLAD_GET_AREAS) [5] /glade/u/home/tvda/CISM/libglad/glad_main.F90(559,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(569,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(569,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(569,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(569,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(569,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(569,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(569,5)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(569,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(569,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(559,14):remark #34051: REGISTER ALLOCATION : [glad_main_mp_glad_get_areas_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:559

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :      62
            Global    :      38
            Local     :      24
        Regenerable   :       1
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [1.25e-01 ~ 0.1%]
            Writes    :       1 [1.25e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::GLAD_GCM

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::GLAD_GCM) [6] /glade/u/home/tvda/CISM/libglad/glad_main.F90(577,14)
  -> DELETED: (670,8) for_write_int_lis_xmit
  -> DELETED: (670,8) for_write_int_lis_xmit
  -> DELETED: (670,8) for_write_int_lis
  -> DELETED: (671,13) WRITE_LOG
  -> DELETED: (671,23) for_trim
  -> DELETED: (677,8) for_write_int_lis
  -> DELETED: (677,8) for_write_int_lis_xmit
  -> DELETED: (677,8) for_write_int_lis_xmit
  -> DELETED: (677,8) for_write_int_lis_xmit
  -> DELETED: (678,13) WRITE_LOG
  -> DELETED: (678,23) for_trim
  -> DELETED: (683,11) for_write_seq_lis_xmit
  -> DELETED: (683,11) for_write_seq_lis_xmit
  -> DELETED: (683,11) for_write_seq_lis_xmit
  -> DELETED: (683,11) for_write_seq_lis_xmit
  -> DELETED: (683,11) for_write_seq_lis
  -> DELETED: (684,11) for_write_seq_lis
  -> INLINE: (711,16) GLAD_MAIN::COMPUTE_THERMAL_FORCING_LEVEL
  -> DELETED: (722,11) for_write_seq_lis_xmit
  -> DELETED: (722,11) for_write_seq_lis_xmit
  -> DELETED: (722,11) for_write_seq_lis_xmit
  -> DELETED: (722,11) for_write_seq_lis
  -> DELETED: (723,11) for_write_seq_lis
  -> (831,16) GLAD_MAIN::GLAD_SET_OUTPUT_FIELDS


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(666,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(666,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(666,5)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(666,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(711,16)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(711,16)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(711,16)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(888,5) inlined into /glade/u/home/tvda/CISM/libglad/glad_main.F90(739,16)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(888,5) inlined into /glade/u/home/tvda/CISM/libglad/glad_main.F90(739,16)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(890,8) inlined into /glade/u/home/tvda/CISM/libglad/glad_main.F90(739,16)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(890,8) inlined into /glade/u/home/tvda/CISM/libglad/glad_main.F90(739,16)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(890,8) inlined into /glade/u/home/tvda/CISM/libglad/glad_main.F90(739,16)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(894,8) inlined into /glade/u/home/tvda/CISM/libglad/glad_main.F90(739,16)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(894,8) inlined into /glade/u/home/tvda/CISM/libglad/glad_main.F90(739,16)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(894,8) inlined into /glade/u/home/tvda/CISM/libglad/glad_main.F90(739,16)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(818,11)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(818,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between at (818:11) and at (818:11)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(818,11)
   <Remainder>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(716,8)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(577,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(663,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(577,14):remark #34051: REGISTER ALLOCATION : [glad_main_mp_glad_gcm_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:577

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm7]
        
    Routine temporaries
        Total         :    1491
            Global    :     250
            Local     :    1241
        Regenerable   :     255
        Spilled       :      68
        
    Routine stack
        Variables     :    1572 bytes*
            Reads     :      67 [1.09e+00 ~ 1.1%]
            Writes    :     276 [5.48e+00 ~ 5.5%]
        Spills        :     496 bytes*
            Reads     :     145 [7.41e+00 ~ 7.4%]
            Writes    :      81 [2.27e+00 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::GLAD_SET_OUTPUT_FIELDS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::GLAD_SET_OUTPUT_FIELDS) [7] /glade/u/home/tvda/CISM/libglad/glad_main.F90(967,14)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(967,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(1005,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(967,14):remark #34051: REGISTER ALLOCATION : [glad_main_mp_glad_set_output_fields_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:967

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :     375
            Global    :      48
            Local     :     327
        Regenerable   :      44
        Spilled       :       9
        
    Routine stack
        Variables     :     492 bytes*
            Reads     :      15 [2.98e+00 ~ 3.0%]
            Writes    :      89 [2.29e+01 ~ 22.9%]
        Spills        :      32 bytes*
            Reads     :       4 [9.84e-01 ~ 1.0%]
            Writes    :       4 [9.84e-01 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::COMPUTE_THERMAL_FORCING_LEVEL

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::COMPUTE_THERMAL_FORCING_LEVEL) [8] /glade/u/home/tvda/CISM/libglad/glad_main.F90(861,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(888,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(888,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(890,8)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(890,8)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(890,8)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(894,8)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(894,8)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(894,8)
   <Remainder>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(861,14):remark #34051: REGISTER ALLOCATION : [glad_main_mp_compute_thermal_forcing_level_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:861

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :     149
            Global    :      91
            Local     :      58
        Regenerable   :      10
        Spilled       :      42
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     296 bytes*
            Reads     :      79 [1.40e+01 ~ 14.0%]
            Writes    :      46 [5.29e+00 ~ 5.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::GLAD_OKAY_TO_RESTART

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::GLAD_OKAY_TO_RESTART) [9] /glade/u/home/tvda/CISM/libglad/glad_main.F90(901,25)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(901,25):remark #34051: REGISTER ALLOCATION : [glad_main_mp_glad_okay_to_restart_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:901

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      16
            Global    :       7
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::END_GLAD

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::END_GLAD) [10] /glade/u/home/tvda/CISM/libglad/glad_main.F90(934,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(950,5)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(934,14):remark #34051: REGISTER ALLOCATION : [glad_main_mp_end_glad_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:934

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r11 r13-r15]
        
    Routine temporaries
        Total         :     104
            Global    :      15
            Local     :      89
        Regenerable   :       9
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [6.24e-01 ~ 0.6%]
            Writes    :       2 [6.24e-01 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::GLAD_READCONFIG

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::GLAD_READCONFIG) [11] /glade/u/home/tvda/CISM/libglad/glad_main.F90(1027,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(1063,8)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(1067,8)
   remark #15523: loop was not vectorized: loop control variable ? was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(1067,8):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(1027,14):remark #34051: REGISTER ALLOCATION : [glad_main_mp_glad_readconfig_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:1027

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     125
            Global    :      26
            Local     :      99
        Regenerable   :      61
        Spilled       :       5
        
    Routine stack
        Variables     :     128 bytes*
            Reads     :       1 [5.49e-02 ~ 0.1%]
            Writes    :       8 [1.43e+00 ~ 1.4%]
        Spills        :       8 bytes*
            Reads     :       1 [5.37e-02 ~ 0.1%]
            Writes    :       1 [5.37e-02 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::CHECK_MBTS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::CHECK_MBTS) [12] /glade/u/home/tvda/CISM/libglad/glad_main.F90(1083,20)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(1110,5)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(1083,20):remark #34051: REGISTER ALLOCATION : [glad_main_mp_check_mbts_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:1083

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      12
            Local     :      18
        Regenerable   :      11
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.11e+00 ~ 3.1%]
            Writes    :       4 [3.11e+00 ~ 3.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::GLAD_INITIALIZATION_WRAPUP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::GLAD_INITIALIZATION_WRAPUP) [13] /glade/u/home/tvda/CISM/libglad/glad_main.F90(378,14)
  -> INLINE: (389,25) GLAD_MAIN::CHECK_MBTS
  -> INLINE: (392,17) GLAD_MAIN::CHECK_MBTS


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(1110,5) inlined into /glade/u/home/tvda/CISM/libglad/glad_main.F90(417,25)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(1110,5) inlined into /glade/u/home/tvda/CISM/libglad/glad_main.F90(420,17)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(378,14):remark #34051: REGISTER ALLOCATION : [glad_main_mp_glad_initialization_wrapup_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:378

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     127
            Global    :      25
            Local     :     102
        Regenerable   :      81
        Spilled       :       7
        
    Routine stack
        Variables     :     304 bytes*
            Reads     :       2 [3.32e+00 ~ 3.3%]
            Writes    :      18 [2.66e+00 ~ 2.7%]
        Spills        :      24 bytes*
            Reads     :       6 [1.79e+00 ~ 1.8%]
            Writes    :       6 [1.79e+00 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::GLAD_GET_INITIAL_OUTPUTS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::GLAD_GET_INITIAL_OUTPUTS) [14] /glade/u/home/tvda/CISM/libglad/glad_main.F90(341,14)
  -> INLINE: (368,10) GLAD_MAIN::GLAD_SET_OUTPUT_FIELDS


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(967,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(1005,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(341,14):remark #34051: REGISTER ALLOCATION : [glad_main_mp_glad_get_initial_outputs_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:341

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :     382
            Global    :      49
            Local     :     333
        Regenerable   :      47
        Spilled       :      10
        
    Routine stack
        Variables     :     492 bytes*
            Reads     :      15 [2.91e+00 ~ 2.9%]
            Writes    :      87 [2.24e+01 ~ 22.4%]
        Spills        :      40 bytes*
            Reads     :       5 [1.20e+00 ~ 1.2%]
            Writes    :       5 [1.20e+00 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::GLAD_INITIALIZE_INSTANCE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::GLAD_INITIALIZE_INSTANCE) [15] /glade/u/home/tvda/CISM/libglad/glad_main.F90(255,14)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(255,14):remark #34051: REGISTER ALLOCATION : [glad_main_mp_glad_initialize_instance_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:255

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      64
            Global    :      15
            Local     :      49
        Regenerable   :      25
        Spilled       :       5
        
    Routine stack
        Variables     :     292 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       6 [2.34e+00 ~ 2.3%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_MAIN::GLAD_INITIALIZE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_MAIN::GLAD_INITIALIZE) [16] /glade/u/home/tvda/CISM/libglad/glad_main.F90(149,14)
  -> INLINE: (238,13) GLAD_MAIN::GLAD_READCONFIG


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(231,8)
   remark #15527: loop was not vectorized: function call to memcpy cannot be vectorized
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(1063,8) inlined into /glade/u/home/tvda/CISM/libglad/glad_main.F90(266,13)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(1067,8) inlined into /glade/u/home/tvda/CISM/libglad/glad_main.F90(266,13)
   remark #15523: loop was not vectorized: loop control variable ? was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(242,8)
   remark #15523: loop was not vectorized: loop control variable ? was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_main.F90(245,5)
   remark #15523: loop was not vectorized: loop control variable ? was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_main.F90(231,8):remark #34026: call to memcpy implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglad/glad_main.F90(1067,8):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/glade/u/home/tvda/CISM/libglad/glad_main.F90(245,5):remark #34026: call to memcpy implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglad/glad_main.F90(149,14):remark #34051: REGISTER ALLOCATION : [glad_main_mp_glad_initialize_] /glade/u/home/tvda/CISM/libglad/glad_main.F90:149

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     330
            Global    :      73
            Local     :     257
        Regenerable   :     168
        Spilled       :      13
        
    Routine stack
        Variables     :     552 bytes*
            Reads     :       5 [1.71e+00 ~ 1.7%]
            Writes    :      32 [1.65e+00 ~ 1.6%]
        Spills        :      64 bytes*
            Reads     :       8 [6.47e-01 ~ 0.6%]
            Writes    :       8 [2.88e-01 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
