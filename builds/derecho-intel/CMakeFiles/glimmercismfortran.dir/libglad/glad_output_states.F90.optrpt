Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: glad_output_states._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (glad_output_states._) [1] /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(31,8)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_output_states.F90(31,8):remark #34051: REGISTER ALLOCATION : [glad_output_states._] /glade/u/home/tvda/CISM/libglad/glad_output_states.F90:31

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_OUTPUT_STATES::SET_OUTPUT_STATES

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_OUTPUT_STATES::SET_OUTPUT_STATES) [2] /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(49,14)
  -> INLINE: (80,15) GLAD_OUTPUT_STATES::IS_IN_ACTIVE_GRID
  -> INLINE: (83,18) GLAD_OUTPUT_STATES::IS_ICE_COVERED


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(71,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(71,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(71,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(71,5)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(71,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(71,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(72,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(72,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(72,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(72,5)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(72,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(72,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(73,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(73,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(73,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(73,5)
<Multiversioned v2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(73,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(73,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(78,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(79,8)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_output_states.F90(49,14):remark #34051: REGISTER ALLOCATION : [glad_output_states_mp_set_output_states_] /glade/u/home/tvda/CISM/libglad/glad_output_states.F90:49

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm2]
        
    Routine temporaries
        Total         :     193
            Global    :     117
            Local     :      76
        Regenerable   :      10
        Spilled       :      53
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     368 bytes*
            Reads     :      60 [8.17e+00 ~ 8.2%]
            Writes    :      57 [3.89e+00 ~ 3.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_OUTPUT_STATES::IS_IN_ACTIVE_GRID

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_OUTPUT_STATES::IS_IN_ACTIVE_GRID) [3] /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(111,20)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_output_states.F90(111,20):remark #34051: REGISTER ALLOCATION : [glad_output_states_mp_is_in_active_grid_] /glade/u/home/tvda/CISM/libglad/glad_output_states.F90:111

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8-r9 zmm0-zmm1]
        
    Routine temporaries
        Total         :      30
            Global    :       0
            Local     :      30
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLAD_OUTPUT_STATES::IS_ICE_COVERED

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLAD_OUTPUT_STATES::IS_ICE_COVERED) [4] /glade/u/home/tvda/CISM/libglad/glad_output_states.F90(138,20)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglad/glad_output_states.F90(138,20):remark #34051: REGISTER ALLOCATION : [glad_output_states_mp_is_ice_covered_] /glade/u/home/tvda/CISM/libglad/glad_output_states.F90:138

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8-r9 zmm0-zmm1]
        
    Routine temporaries
        Total         :      30
            Global    :       0
            Local     :      30
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
