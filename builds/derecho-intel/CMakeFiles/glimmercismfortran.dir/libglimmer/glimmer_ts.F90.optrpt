Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: glimmer_ts._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (glimmer_ts._) [1] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(39,8)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(39,8):remark #34051: REGISTER ALLOCATION : [glimmer_ts._] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90:39

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_TS::GLIMMER_READ_TS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_TS::GLIMMER_READ_TS) [2] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(66,14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(126,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(127,8)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between at (127:8) and at (127:8)
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(102,19)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(66,14):remark #34051: REGISTER ALLOCATION : [glimmer_ts_mp_glimmer_read_ts_] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90:66

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0-zmm2]
        
    Routine temporaries
        Total         :     271
            Global    :      76
            Local     :     195
        Regenerable   :     123
        Spilled       :      12
        
    Routine stack
        Variables     :     368 bytes*
            Reads     :       5 [7.15e-01 ~ 0.7%]
            Writes    :      49 [1.01e+01 ~ 10.1%]
        Spills        :      56 bytes*
            Reads     :      12 [8.78e-01 ~ 0.9%]
            Writes    :       9 [1.03e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_TS::GLIMMER_TS_STEP_ARRAY

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_TS::GLIMMER_TS_STEP_ARRAY) [3] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(133,14)
  -> INLINE: (146,9) GLIMMER_TS::GET_I


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(153,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(153,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(153,5)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(153,5)
<Remainder, Multiversioned v2>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(263,11) inlined into /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(174,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(133,14):remark #34051: REGISTER ALLOCATION : [glimmer_ts_mp_glimmer_ts_step_array_] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90:133

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     112
            Global    :      45
            Local     :      67
        Regenerable   :      12
        Spilled       :      14
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      64 bytes*
            Reads     :       8 [2.25e+00 ~ 2.3%]
            Writes    :       8 [2.35e+00 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_TS::GLIMMER_TS_STEP_SCALAR

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_TS::GLIMMER_TS_STEP_SCALAR) [4] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(157,14)
  -> INLINE: (166,9) GLIMMER_TS::GET_I


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(263,11) inlined into /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(194,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(157,14):remark #34051: REGISTER ALLOCATION : [glimmer_ts_mp_glimmer_ts_step_scalar_] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90:157

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r11 r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :      61
            Global    :      23
            Local     :      38
        Regenerable   :       1
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [1.89e-01 ~ 0.2%]
            Writes    :       1 [1.89e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_TS::GLIMMER_TS_LINEAR_ARRAY

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_TS::GLIMMER_TS_LINEAR_ARRAY) [5] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(177,14)
  -> INLINE: (191,9) GLIMMER_TS::GET_I


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(193,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(193,8)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(193,8)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(193,8)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(195,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(195,8)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(195,8)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(195,8)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(197,8)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(197,8)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(197,8)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(198,8)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(198,8)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(198,8)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(263,11) inlined into /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(219,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(177,14):remark #34051: REGISTER ALLOCATION : [glimmer_ts_mp_glimmer_ts_linear_array_] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90:177

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   26[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm11]
        
    Routine temporaries
        Total         :     404
            Global    :     128
            Local     :     276
        Regenerable   :      12
        Spilled       :      55
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     328 bytes*
            Reads     :      58 [3.82e+00 ~ 3.8%]
            Writes    :      50 [3.26e+00 ~ 3.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_TS::GLIMMER_TS_LINEAR_SCALAR

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_TS::GLIMMER_TS_LINEAR_SCALAR) [6] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(203,14)
  -> INLINE: (213,9) GLIMMER_TS::GET_I


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(263,11) inlined into /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(241,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(203,14):remark #34051: REGISTER ALLOCATION : [glimmer_ts_mp_glimmer_ts_linear_scalar_] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90:203

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r11 r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :      93
            Global    :      27
            Local     :      66
        Regenerable   :       1
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_TS::GET_I

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_TS::GET_I) [7] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(225,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(263,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90(225,12):remark #34051: REGISTER ALLOCATION : [glimmer_ts_mp_get_i_] /glade/u/home/tvda/CISM/libglimmer/glimmer_ts.F90:225

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rsi rdi r8-r10 zmm0-zmm3]
        
    Routine temporaries
        Total         :      45
            Global    :      19
            Local     :      26
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
