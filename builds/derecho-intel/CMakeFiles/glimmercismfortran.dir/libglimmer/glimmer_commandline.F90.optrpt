Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: glimmer_commandline._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (glimmer_commandline._) [1] /glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90(38,8)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90(38,8):remark #34051: REGISTER ALLOCATION : [glimmer_commandline._] /glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90:38

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_COMMANDLINE::GLIMMER_GETCOMMANDLINE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_COMMANDLINE::GLIMMER_GETCOMMANDLINE) [2] /glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90(56,14)
  -> INLINE: (92,25) GLIMMER_COMMANDLINE::GLIMMER_COMMANDLINEHELP
  -> INLINE: (98,28) GLIMMER_COMMANDLINE::GLIMMER_COMMANDLINEHELP
  -> INLINE: (104,25) GLIMMER_COMMANDLINE::GLIMMER_COMMANDLINEHELP
  -> INLINE: (117,19) GLIMMER_COMMANDLINE::GLIMMER_COMMANDLINEHELP


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90(76,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between at (77:37) and at (77:16)
LOOP END


Non-optimizable loops:


LOOP BEGIN at /glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90(85,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90(90,30):remark #34026: call to memmove implemented as a call to optimized library version
/glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90(56,14):remark #34051: REGISTER ALLOCATION : [glimmer_commandline_mp_glimmer_getcommandline_] /glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90:56

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     435
            Global    :      62
            Local     :     373
        Regenerable   :     382
        Spilled       :       6
        
    Routine stack
        Variables     :    8164 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      91 [3.84e+00 ~ 3.8%]
        Spills        :      40 bytes*
            Reads     :       8 [5.82e-01 ~ 0.6%]
            Writes    :       5 [2.88e-01 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_COMMANDLINE::GLIMMER_PRINTCOMMANDLINE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_COMMANDLINE::GLIMMER_PRINTCOMMANDLINE) [3] /glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90(133,14)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90(133,14):remark #34051: REGISTER ALLOCATION : [glimmer_commandline_mp_glimmer_printcommandline_] /glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90:133

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      84
            Global    :      17
            Local     :      67
        Regenerable   :      69
        Spilled       :       0
        
    Routine stack
        Variables     :    5560 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      17 [1.53e+01 ~ 15.3%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GLIMMER_COMMANDLINE::GLIMMER_COMMANDLINEHELP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GLIMMER_COMMANDLINE::GLIMMER_COMMANDLINEHELP) [4] /glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90(150,14)


    Report from: Code generation optimizations [cg]

/glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90(150,14):remark #34051: REGISTER ALLOCATION : [glimmer_commandline_mp_glimmer_commandlinehelp_] /glade/u/home/tvda/CISM/libglimmer/glimmer_commandline.F90:150

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      65
            Global    :      12
            Local     :      53
        Regenerable   :      56
        Spilled       :       0
        
    Routine stack
        Variables     :     660 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      16 [1.54e+01 ~ 15.4%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
