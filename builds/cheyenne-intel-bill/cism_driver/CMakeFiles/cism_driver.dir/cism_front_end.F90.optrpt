Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: cism_front_end._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (cism_front_end._) [1] /glade/u/home/lipscomb/cism-development/cism_driver/cism_front_end.F90(31,8)


    Report from: Code generation optimizations [cg]

/glade/u/home/lipscomb/cism-development/cism_driver/cism_front_end.F90(31,8):remark #34051: REGISTER ALLOCATION : [cism_front_end._] /glade/u/home/lipscomb/cism-development/cism_driver/cism_front_end.F90:31

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: CISM_FRONT_END::CISM_RUN_DYCORE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (CISM_FRONT_END::CISM_RUN_DYCORE) [2] /glade/u/home/lipscomb/cism-development/cism_driver/cism_front_end.F90(237,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /glade/u/home/lipscomb/cism-development/cism_driver/cism_front_end.F90(279,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/glade/u/home/lipscomb/cism-development/cism_driver/cism_front_end.F90(237,12):remark #34051: REGISTER ALLOCATION : [cism_front_end_mp_cism_run_dycore_] /glade/u/home/lipscomb/cism-development/cism_driver/cism_front_end.F90:237

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rsi rdi r8 r12-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     121
            Global    :      28
            Local     :      93
        Regenerable   :      76
        Spilled       :       5
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       4 [2.76e+00 ~ 2.5%]
            Writes    :       4 [1.13e+00 ~ 1.0%]
        Spills        :      40 bytes*
            Reads     :       6 [1.76e+00 ~ 1.6%]
            Writes    :       5 [8.04e-01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: CISM_FRONT_END::CISM_FINALIZE_DYCORE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (CISM_FRONT_END::CISM_FINALIZE_DYCORE) [3] /glade/u/home/lipscomb/cism-development/cism_driver/cism_front_end.F90(392,12)


    Report from: Code generation optimizations [cg]

/glade/u/home/lipscomb/cism-development/cism_driver/cism_front_end.F90(392,12):remark #34051: REGISTER ALLOCATION : [cism_front_end_mp_cism_finalize_dycore_] /glade/u/home/lipscomb/cism-development/cism_driver/cism_front_end.F90:392

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8 r13 zmm0-zmm1]
        
    Routine temporaries
        Total         :      45
            Global    :      11
            Local     :      34
        Regenerable   :      23
        Spilled       :       1
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       1 [1.00e+00 ~ 2.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: CISM_FRONT_END::CISM_INIT_DYCORE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (CISM_FRONT_END::CISM_INIT_DYCORE) [4] /glade/u/home/lipscomb/cism-development/cism_driver/cism_front_end.F90(39,12)


    Report from: Code generation optimizations [cg]

/glade/u/home/lipscomb/cism-development/cism_driver/cism_front_end.F90(39,12):remark #34051: REGISTER ALLOCATION : [cism_front_end_mp_cism_init_dycore_] /glade/u/home/lipscomb/cism-development/cism_driver/cism_front_end.F90:39

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r14-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     148
            Global    :      16
            Local     :     132
        Regenerable   :      84
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       1 [1.00e+00 ~ 1.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
